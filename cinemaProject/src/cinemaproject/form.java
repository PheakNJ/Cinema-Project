
package cinemaproject;

import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import java.sql.Statement;

public class form extends javax.swing.JFrame {

    public form() {
        initComponents();
        setImage();
        calculateTotal(all_total_filed);
    }

    public void setImage() {
        ImageIcon icon30 = new ImageIcon(getClass().getResource("/images/formLogo.jpg"));
        Image img30 = icon30.getImage().getScaledInstance(logo_2.getWidth(), logo_2.getHeight(), Image.SCALE_SMOOTH);
        logo_2.setIcon(new ImageIcon(img30));
    }

    private void calculateTotal(JTextField targetTextField) {
        try {
            // Connect with the database
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/cinema", "root", "");

            // SQL query to sum all values in the 'total' column
            PreparedStatement ps = con.prepareStatement("SELECT SUM(total) AS totalSum FROM `menu_cinema`");
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                // Get the sum from the result set
                double totalSum = rs.getDouble("totalSum");

                // Set the sum to the provided JTextField
                targetTextField.setText(String.format(" $ %.2f", totalSum));
            }

            rs.close();
            ps.close();
            con.close();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(menu_snack_drink.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "An error occurred while calculating the total.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        riel_pay_field = new javax.swing.JTextField();
        all_total_filed = new javax.swing.JTextField();
        logo_2 = new javax.swing.JLabel();
        discount_combo = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cash_return_dollar = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        dollar_pay_field = new javax.swing.JTextField();
        cash_receive_riel = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cash_return_riel = new javax.swing.JTextField();
        cash_receive_dollar = new javax.swing.JTextField();
        cash_btn = new javax.swing.JButton();
        back_btn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(600, 800));
        setMinimumSize(new java.awt.Dimension(600, 800));

        jPanel1.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 3, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("All Total:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(110, 170, 150, 40);

        riel_pay_field.setBackground(new java.awt.Color(255, 255, 255));
        riel_pay_field.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        riel_pay_field.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(riel_pay_field);
        riel_pay_field.setBounds(270, 350, 200, 40);

        all_total_filed.setBackground(new java.awt.Color(255, 255, 255));
        all_total_filed.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        all_total_filed.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(all_total_filed);
        all_total_filed.setBounds(270, 170, 200, 40);
        jPanel1.add(logo_2);
        logo_2.setBounds(180, 20, 240, 130);

        discount_combo.setBackground(new java.awt.Color(255, 255, 255));
        discount_combo.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        discount_combo.setForeground(new java.awt.Color(0, 0, 0));
        discount_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0%", "5%", "10%", "15%", "20%", "25%", "30%" }));
        discount_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discount_comboActionPerformed(evt);
            }
        });
        jPanel1.add(discount_combo);
        discount_combo.setBounds(270, 230, 200, 40);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 3, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Payment (R):");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(110, 350, 140, 40);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 3, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Cash Return ($):");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(110, 470, 160, 40);

        cash_return_dollar.setBackground(new java.awt.Color(255, 255, 255));
        cash_return_dollar.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        cash_return_dollar.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(cash_return_dollar);
        cash_return_dollar.setBounds(270, 470, 200, 40);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 3, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Discount (%):");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(110, 230, 150, 40);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 3, 20)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Payment ($):");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(110, 290, 150, 40);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 3, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Cash Receive (R):");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(110, 530, 150, 40);

        dollar_pay_field.setBackground(new java.awt.Color(255, 255, 255));
        dollar_pay_field.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        dollar_pay_field.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(dollar_pay_field);
        dollar_pay_field.setBounds(270, 290, 200, 40);

        cash_receive_riel.setBackground(new java.awt.Color(255, 255, 255));
        cash_receive_riel.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        cash_receive_riel.setForeground(new java.awt.Color(0, 0, 0));
        cash_receive_riel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cash_receive_rielKeyReleased(evt);
            }
        });
        jPanel1.add(cash_receive_riel);
        cash_receive_riel.setBounds(270, 530, 200, 40);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 3, 20)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Cash Return (R):");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(110, 590, 160, 40);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 3, 20)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Cash Receive ($):");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(110, 410, 160, 40);

        cash_return_riel.setBackground(new java.awt.Color(255, 255, 255));
        cash_return_riel.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        cash_return_riel.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(cash_return_riel);
        cash_return_riel.setBounds(270, 590, 200, 40);

        cash_receive_dollar.setBackground(new java.awt.Color(255, 255, 255));
        cash_receive_dollar.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        cash_receive_dollar.setForeground(new java.awt.Color(0, 0, 0));
        cash_receive_dollar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cash_receive_dollarKeyReleased(evt);
            }
        });
        jPanel1.add(cash_receive_dollar);
        cash_receive_dollar.setBounds(270, 410, 200, 40);

        cash_btn.setBackground(new java.awt.Color(255, 255, 255));
        cash_btn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cash_btn.setForeground(new java.awt.Color(0, 0, 0));
        cash_btn.setText("Cash");
        cash_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cash_btnMouseClicked(evt);
            }
        });
        jPanel1.add(cash_btn);
        cash_btn.setBounds(150, 680, 120, 40);

        back_btn.setBackground(new java.awt.Color(231, 231, 45));
        back_btn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        back_btn.setForeground(new java.awt.Color(0, 0, 0));
        back_btn.setText("Back");
        back_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                back_btnMouseClicked(evt);
            }
        });
        jPanel1.add(back_btn);
        back_btn.setBounds(310, 680, 120, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon("D:\\img_cinema\\formPx.jpg")); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, -10, 610, 820);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void back_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back_btnMouseClicked
        // Create an instance of menu_snack_drink
        menu_snack_drink obj = new menu_snack_drink();

        DefaultTableModel model = (DefaultTableModel) obj.getTableData().getModel();
        model.setRowCount(0); // Clear any existing data

        try {
            // Connect to the database
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/cinema", "root", "");

            // Query to retrieve all records from the `menu_cinema` table
            String query = "SELECT * FROM `menu_cinema`";
            PreparedStatement ps = con.prepareStatement(query);
            ResultSet rs = ps.executeQuery();

            // Loop through the result set and add rows to the table model
            while (rs.next()) {
                String name = rs.getString("name");
                double price = rs.getDouble("price");
                int qty = rs.getInt("qty");
                double total = rs.getDouble("total");

                // Add row data to the table model
                model.addRow(new Object[]{name, price, qty, total});
            }

            // Close the resources
            rs.close();
            ps.close();
            con.close();

        } catch (ClassNotFoundException | SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading data from database", "Error", JOptionPane.ERROR_MESSAGE);
        }

        // Show the menu_snack_drink frame with the loaded data
        obj.setVisible(true);
        this.dispose();  // Close the current frame
    }//GEN-LAST:event_back_btnMouseClicked

    private void cash_receive_rielKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cash_receive_rielKeyReleased
        // Get the selected discount percentage
        String selectedDiscount = (String) discount_combo.getSelectedItem();

        // Remove the '%' sign and convert to a double
        double discountPercentage = Double.parseDouble(selectedDiscount.replace("%", ""));

        // Get the current total from all_total_filed (remove $ and spaces)
        String totalText = all_total_filed.getText().replace("$", "").trim();   // .replace use for replace $ from all total to null for calculate
        double totalAmount = Double.parseDouble(totalText);

        // Calculate the discounted total
        double discountedAmount = totalAmount - (totalAmount * discountPercentage / 100);

        // Convert the discounted amount to Riel 
        double rielAmount = discountedAmount * 4100;

        try {
            // Get the cash receive value from the text field
            String cashReceiveText = cash_receive_riel.getText().trim();
            double cashReceive = Double.parseDouble(cashReceiveText.isEmpty() ? "0" : cashReceiveText);

            double cashReturnRiel = cashReceive - rielAmount;
            cash_return_riel.setText(String.format("R %.2f", cashReturnRiel));

            // If user input cash receive dollar generate to cash receive riel too !! 
            double cashReceive_dollar = cashReceive / 4100;
            cash_receive_dollar.setText(String.format("$ %.2f", cashReceive_dollar));

            double cash_return_dollar = cashReturnRiel / 4100;
            this.cash_return_dollar.setText(String.format("$ %.2f", cash_return_dollar));

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid number for cash received!", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cash_receive_rielKeyReleased

    private void cash_receive_dollarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cash_receive_dollarKeyReleased
        // Get the selected discount percentage
        String selectedDiscount = (String) discount_combo.getSelectedItem();

        // Remove the '%' sign and convert to a double
        double discountPercentage = Double.parseDouble(selectedDiscount.replace("%", ""));

        // Get the current total from all_total_filed (remove $ and spaces)
        String totalText = all_total_filed.getText().replace("$", "").trim();   // .replace use for replace $ from all total to null for calculate
        double totalAmount = Double.parseDouble(totalText);

        // Calculate the discounted total
        double discountedAmount = totalAmount - (totalAmount * discountPercentage / 100);

        try {
            // Get the cash receive value from the text field
            String cashReceiveText = cash_receive_dollar.getText().trim();
            double cashReceiveDollar = Double.parseDouble(cashReceiveText.isEmpty() ? "0" : cashReceiveText);

            double cashReturnDollar = cashReceiveDollar - discountedAmount;
            cash_return_dollar.setText(String.format("$ %.2f", cashReturnDollar));

            // If user input cash receive dollar generate to cash receive riel too !! 
            double cashReceive_riel = cashReceiveDollar * 4100;
            cash_receive_riel.setText(String.format("R %.2f", cashReceive_riel));

            double reurn_riel = cashReturnDollar * 4100;
            cash_return_riel.setText(String.format("R %.2f", reurn_riel));

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid number for cash received!", "Input Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cash_receive_dollarKeyReleased

    private void cash_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cash_btnMouseClicked
        try {
            // Parse values from text fields
            double total = Double.parseDouble(all_total_filed.getText().replace("$", "").trim());
            String selectedDiscount = (String) discount_combo.getSelectedItem();
            double discountPercentage = Double.parseDouble(selectedDiscount.replace("%", ""));

            double paymentDollar = Double.parseDouble(dollar_pay_field.getText().replace("$", "").trim());
            double paymentRiel = Double.parseDouble(riel_pay_field.getText().replace("R", "").trim());
            double cashReceiveRiel = Double.parseDouble(cash_receive_riel.getText().replace("R", "").trim());
            double cashReturnRiel = Double.parseDouble(cash_return_riel.getText().replace("R", "").trim());
            double cashReceiveDollar = Double.parseDouble(cash_receive_dollar.getText().replace("$", "").trim());
            double cashReturnDollar = Double.parseDouble(cash_return_dollar.getText().replace("$", "").trim());

            // Create a map to pass parameters to the Jasper report
            Map<String, Object> parameters = new HashMap<>();
            parameters.put("total", total);
            parameters.put("discount", discountPercentage);
            parameters.put("paymentd", paymentDollar);
            parameters.put("paymentr", paymentRiel);
            parameters.put("cashreceived", cashReceiveRiel);
            parameters.put("cashreturn", cashReturnRiel);
            parameters.put("received", cashReceiveDollar);
            parameters.put("return", cashReturnDollar);

            // Load the Jasper report template
            JasperReport jasperReport = JasperCompileManager.compileReport("D:\\java_programing_etec\\cinema_project\\cinemaProject\\src\\cinemaproject\\invoice.jrxml");

            // Establish a connection to the database
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/cinema", "pheak", "0882534191");

            // Create SQL query to fetch data
            String sql = "SELECT * FROM menu_cinema";

            // Execute the query and get the result set
            Statement stmt = (Statement) conn.createStatement();
            ResultSet rs;
            rs = stmt.executeQuery(sql);

            // Pass the result set to JasperReports using JRResultSetDataSource
            JRResultSetDataSource jrDataSource = new JRResultSetDataSource(rs);

            // Fill the report with parameters and data source
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, jrDataSource);

            // View the report in a JasperViewer
            JasperViewer.viewReport(jasperPrint, false);

            // Close the database connection
            conn.close();
            this.dispose();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please ensure all fields have valid numeric values.", "Input Error", JOptionPane.ERROR_MESSAGE);
        } catch (JRException | SQLException e) {
            Logger.getLogger(form.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(this, "An error occurred while generating the report.", "Report Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_cash_btnMouseClicked

    private void discount_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discount_comboActionPerformed
        // Get the selected discount percentage
        String selectedDiscount = (String) discount_combo.getSelectedItem();

        // Remove the '%' sign and convert to a double
        double discountPercentage = Double.parseDouble(selectedDiscount.replace("%", ""));

        // Get the current total from all_total_filed (remove $ and spaces)
        String totalText = all_total_filed.getText().replace("$", "").trim();   // .replace use for replace $ from all total to null for calculate
        double totalAmount = Double.parseDouble(totalText);

        // Calculate the discounted total
        double discountedAmount = totalAmount - (totalAmount * discountPercentage / 100);

        // Convert the discounted amount to Riel 
        int rielAmount = (int) (discountedAmount * 4100);  // Cast to int to drop decimals

        // Update the dollar_field and riel_pay_field
        dollar_pay_field.setText(String.format("$ %.2f", discountedAmount));
        riel_pay_field.setText(String.format("R %d", rielAmount));  // Corrected format
    }//GEN-LAST:event_discount_comboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField all_total_filed;
    private javax.swing.JButton back_btn;
    private javax.swing.JButton cash_btn;
    private javax.swing.JTextField cash_receive_dollar;
    private javax.swing.JTextField cash_receive_riel;
    private javax.swing.JTextField cash_return_dollar;
    private javax.swing.JTextField cash_return_riel;
    private javax.swing.JComboBox<String> discount_combo;
    private javax.swing.JTextField dollar_pay_field;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel logo_2;
    private javax.swing.JTextField riel_pay_field;
    // End of variables declaration//GEN-END:variables
}
